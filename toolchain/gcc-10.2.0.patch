diff -bur gcc-10.2.0/config.sub os/toolchain/gcc-10.2.0/gcc-10.2.0/config.sub
--- gcc-10.2.0/config.sub	2020-07-23 02:35:16.912379792 -0400
+++ os/toolchain/gcc-10.2.0/gcc-10.2.0/config.sub	2021-12-12 13:41:23.680292327 -0500
@@ -1339,6 +1339,7 @@
 	# Each alternative MUST end in a * to match a version number.
 	# sysv* is not here because it comes later, after sysvr4.
 	gnu* | bsd* | mach* | minix* | genix* | ultrix* | irix* \
+       | os* \
 	     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]*\
 	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
 	     | sym* | kopensolaris* | plan9* \
diff -bur gcc-10.2.0/fixincludes/mkfixinc.sh os/toolchain/gcc-10.2.0/gcc-10.2.0/fixincludes/mkfixinc.sh
--- gcc-10.2.0/fixincludes/mkfixinc.sh	2020-07-23 02:35:16.932380013 -0400
+++ os/toolchain/gcc-10.2.0/gcc-10.2.0/fixincludes/mkfixinc.sh	2021-12-12 13:42:09.436833959 -0500
@@ -11,6 +11,7 @@
 
 # Check for special fix rules for particular targets
 case $machine in
+    *-os* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
Only in os/toolchain/gcc-10.2.0/gcc-10.2.0/gcc/config: os.h
diff -bur gcc-10.2.0/gcc/config.gcc os/toolchain/gcc-10.2.0/gcc-10.2.0/gcc/config.gcc
--- gcc-10.2.0/gcc/config.gcc	2020-07-23 02:35:17.316384243 -0400
+++ os/toolchain/gcc-10.2.0/gcc-10.2.0/gcc/config.gcc	2021-12-12 13:52:14.494533484 -0500
@@ -675,6 +675,12 @@
 
 # Common parts for widely ported systems.
 case ${target} in
+*-*-os*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=wrap
+  ;;
 *-*-darwin*)
   tmake_file="t-darwin "
   tm_file="${tm_file} darwin.h"
@@ -1033,6 +1039,12 @@
 esac
 
 case ${target} in
+i[34567]86-*-os*)
+    tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h os.h"
+    ;;
+x86_64-*-os*)
+    tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h i386/x86-64.h os.h"
+    ;;
 aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
 	tm_file="${tm_file} dbxelf.h elfos.h newlib-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-elf-raw.h"
diff -bur gcc-10.2.0/libgcc/config.host os/toolchain/gcc-10.2.0/gcc-10.2.0/libgcc/config.host
--- gcc-10.2.0/libgcc/config.host	2020-07-23 02:35:18.752400064 -0400
+++ os/toolchain/gcc-10.2.0/gcc-10.2.0/libgcc/config.host	2021-12-12 13:44:59.854616781 -0500
@@ -359,6 +359,14 @@
 esac
 
 case ${host} in
+i[34567]86-*-os*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
+x86_64-*-os*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
 aarch64*-*-elf | aarch64*-*-rtems*)
 	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
 	extra_parts="$extra_parts crtfastmath.o"
diff -bur gcc-10.2.0/libstdc++-v3/crossconfig.m4 os/toolchain/gcc-10.2.0/gcc-10.2.0/libstdc++-v3/crossconfig.m4
--- gcc-10.2.0/libstdc++-v3/crossconfig.m4	2020-07-23 02:35:19.188404867 -0400
+++ os/toolchain/gcc-10.2.0/gcc-10.2.0/libstdc++-v3/crossconfig.m4	2021-12-12 13:46:08.939183360 -0500
@@ -5,6 +5,13 @@
 AC_DEFUN([GLIBCXX_CROSSCONFIG],[
 # Base decisions on target environment.
 case "${host}" in
+  *-os*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
+
   arm*-*-symbianelf*)
     # This is a freestanding configuration; there is nothing to do here.
     ;;
diff --git a/gcc/config/os.h b/gcc/config/os.h
new file mode 100644
index 000000000..3878cbec0
--- /dev/null
+++ b/gcc/config/os.h
@@ -0,0 +1,29 @@
+/* Useful if you wish to make target-specific GCC changes. */
+#undef TARGET_OS
+#define TARGET_OS 1
+
+/* Default arguments you want when running your
+   i686-os-gcc/x86_64-os-gcc toolchain */
+#undef LIB_SPEC
+#define LIB_SPEC "-lc" /* link against C standard library */
+
+/* Files that are linked before user code.
+   The %s tells GCC to look for these files in the library directory. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crt0.o%s crti.o%s crtbegin.o%s"
+
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend.o%s crtn.o%s"
+
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()        \
+	do                                  \
+	{                                   \
+		builtin_define("__os__");      \
+		builtin_define("__unix__");     \
+		builtin_assert("system=os");   \
+		builtin_assert("system=unix");  \
+		builtin_assert("system=posix"); \
+	} while (0);
